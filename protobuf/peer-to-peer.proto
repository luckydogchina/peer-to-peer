syntax = "proto2";

package p2p;

/*
	服务端提供的远程服务
*/
enum RPCAPI{
	GETUSERSONLINE = 1; //获取当前在线的用户
	CONNECT = 2; //连接指定的用户
	INFO = 3; //通知指定用户
	OFFLINE = 4; //下线
	HEART = 5; //心跳
	HELLO = 6;
}

/*
	当前的状态
*/
enum StatusType {
	SUCCESS = 1;
	FAILURE = 2;
	READY = 3;
	CLOSE = 4;
	RUNNING = 5;
	NOEXIST = 6;
	EXIST = 7;
}

/*
	向服务器发起连接另一个在线用户的请求，
*/
message ConnectRequest
{
	required string  peerIdentity = 1; //链接对象的Id，用mac地址;
}

/*
	服务器返回给发起方
*/
message ConnectRespond
{
	required StatusType statusType = 1 [default = SUCCESS];
}

/*
	返回当前在线的所有用户
*/
message GetUsersOnlineRespond
{
	repeated string usersOnline = 1;
}

/*
	服务器向接收链接方发送链接通知，当其接到通知后准备开始打洞
*/
message NotifyRequest
{
	required string peerIdentity = 1;
	optional bytes payload = 2;
}

/*
	接收方返回状态
*/
message NotifyRespond
{
	required StatusType statusType = 1 [default = SUCCESS];
	optional bytes payload =2 ;
}

/*
	服务器返回Hello应答 
*/
message HelloRespond
{
	required StatusType statusType = 1 [ default = SUCCESS ];
}

/*
	客户端向服务器发送的请求包
*/
message PacketRequst
{
	required RPCAPI rpcApi = 1;
	required string peerIdentity = 2;
	optional ConnectRequest connectRequest = 3;
	optional NotifyRequest notifyRequest = 4;
	optional string version = 5 [default = "0.1.0"];
}

/*
	服务器返回给客户端的应答包
*/
message PacketRespond
{
	required RPCAPI rpcApi = 1;
	optional ConnectRespond connectRespond = 2;
	optional GetUsersOnlineRespond getUsersOnlineRespond = 3;
	optional NotifyRespond notifyRespond = 4;
	optional HelloRespond helloRespond = 5;
	optional string version = 6 [default = "0.1.0"];
}

enum MessageType
{
	ADDRESS = 1;
}

message Address
{
	required string id = 4;
	required string address = 2;
	required int32 port = 3;	
}

message Message
{
	required MessageType t = 1 [ default = ADDRESS ];
	optional Address address = 2;
	optional string version = 3 [default = "0.1.0" ];
}
